#+TITLE: Readme

* Introduction

Compile NML2 definitions to Arbor NMODL. The ~nmlcc~ tool will consume a list of
LEMS files containing NML2 conformant ~ComponentType~ definitions and a NeuroML2
file (~.nml~). By default the following definitions are used
- NML2 :: ~v2-dev~ + XSD ~v2.2~
- LEMS :: XSD ~v0.7.6~

** Current Limitations

- only export to NMODL (in Arbor's dialect) is supported via the ~nmodl~ sub-command.
- units will not be treated completly, rather upon seeing a quantity, it will be
  converted to a 'blessed' unit for that dimension, eg ~1 m~ will become ~100
  cm~ internally. This can have some consequences for accuracy.

* Setup

- Clone this repo
- Bootstrap the compiler
  #+begin_src shell
  bash bootstrap.sh
  #+end_src
  this will
  - bring in the LEMS and NML2 schemata
  - (and *remove them* if present)
  - slightly modify both of them
  - build the data model from the schemata
- Now try an example
  #+begin_src shell
  cargo run -- nmodl --type ionChannelHH example/nml-simple-ion-channels.xml
  #+end_src
  Here, this should generate ~NaConductance.mod~
- Get help
  #+begin_src shell
  cargo run -- -h
  #+end_src

* Usage
- ~nmlcc nmodl~ generates NMODL files that can be compiled into Arbor catalogues
  - ~--type=T~ :: (required) will choose a ~ComponentType~ from which the ~.mod~ files will be built
  - ~--parameter=+p,-q,..~ :: will choose parameters to retain as tweakable
    - can _end_ on wildcard ~*~ to select all suffixes
    - must be ordered from least to most specific, ie ~foo_bar_*~ must come _after_ ~foo_*~
    - if not given, all will be retained (default ~+*~)
