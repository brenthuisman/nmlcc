TITLE Mod file for component: Component(id=passiveChan type=ionChannelPassive)

COMMENT

    This NEURON file has been generated by org.neuroml.export (see https://github.com/NeuroML/org.neuroml.export)
         org.neuroml.export  v1.7.2
         org.neuroml.model   v1.7.2
         jLEMS               v0.10.4

ENDCOMMENT

NEURON {
    SUFFIX passiveChan
    NONSPECIFIC_CURRENT i
    RANGE e
    
    RANGE gion                           
    RANGE conductance                       : parameter
    
    RANGE g                                 : exposure
    
    RANGE fopen                             : exposure
    
}

UNITS {
    
    (nA) = (nanoamp)
    (uA) = (microamp)
    (mA) = (milliamp)
    (A) = (amp)
    (mV) = (millivolt)
    (mS) = (millisiemens)
    (uS) = (microsiemens)
    (molar) = (1/liter)
    (kHz) = (kilohertz)
    (mM) = (millimolar)
    (um) = (micrometer)
    (umol) = (micromole)
    (S) = (siemens)
    
}

PARAMETER {
    e
    conductance = 0  (S/cm2)                       : Will be changed when ion channel mechanism placed on cell!
}

ASSIGNED {
    
    gion   (S/cm2)                          : Transient conductance density of the channel? Standard Assigned variables with ionChannel
    v (mV)
    celsius (degC)
    temperature (K)

    fopen                                  : derived variable
    
    g (uS)                                 : derived variable
    
}

STATE {
    
}

INITIAL {
    temperature = celsius + 273.15
    
    rates(v)
    rates(v) ? To ensure correct initialisation.
    
}

BREAKPOINT {
    
    rates(v)
    fopen = 1 ? evaluable
    g = conductance ? evaluable
    gion = conductance * fopen
    
    i = gion * (v - e)
    
}

PROCEDURE rates(v) {
    
    
     
    
}

